macro UtransV(u,v)(u*v + u#1*v#1 + u#2*v#2 + u#3*v#3 + u#4*v#4 + u#5*v#5)//EOM
[Uprev,Uprev1,Uprev2,Uprev3,Uprev4,Uprev5] =[1,0,0,0,0,0];
[b,b1,b2,b3,b4,b5] =[f,0,0,0,0,0];

macro coeffmultNL(u,v)(
(1*Cd[0]* Uprev+1*Cd[1]* Uprev#1+1*Cd[2]* Uprev#2+1*Cd[3]* Uprev#3+1*Cd[4]* Uprev#4+1*Cd[5]* Uprev#5 ) *  Grad(u)' *  Grad(v)  + 
(1*Cd[1]* Uprev+1*Cd[0]* Uprev#1+1.41421*Cd[3]* Uprev#1+1*Cd[4]* Uprev#2+1.41421*Cd[1]* Uprev#3+1*Cd[2]* Uprev#4 ) *  Grad(u#1)' *  Grad(v)  + 
(1*Cd[2]* Uprev+1*Cd[4]* Uprev#1+1*Cd[0]* Uprev#2+1.41421*Cd[5]* Uprev#2+1*Cd[1]* Uprev#4+1.41421*Cd[2]* Uprev#5 ) *  Grad(u#2)' *  Grad(v)  + 
(1*Cd[3]* Uprev+1.41421*Cd[1]* Uprev#1+1*Cd[0]* Uprev#3+2.82843*Cd[3]* Uprev#3+1.41421*Cd[4]* Uprev#4 ) *  Grad(u#3)' *  Grad(v)  + 
(1*Cd[4]* Uprev+1*Cd[2]* Uprev#1+1*Cd[1]* Uprev#2+1.41421*Cd[4]* Uprev#3+1*Cd[0]* Uprev#4+1.41421*Cd[3]* Uprev#4+1.41421*Cd[5]* Uprev#4+1.41421*Cd[4]* Uprev#5 ) *  Grad(u#4)' *  Grad(v)  + 
(1*Cd[5]* Uprev+1.41421*Cd[2]* Uprev#2+1.41421*Cd[4]* Uprev#4+1*Cd[0]* Uprev#5+2.82843*Cd[5]* Uprev#5 ) *  Grad(u#5)' *  Grad(v)  + 
(1*Cd[1]* Uprev+1*Cd[0]* Uprev#1+1.41421*Cd[3]* Uprev#1+1*Cd[4]* Uprev#2+1.41421*Cd[1]* Uprev#3+1*Cd[2]* Uprev#4 ) *  Grad(u)' *  Grad(v#1)  + 
(1*Cd[0]* Uprev+1.41421*Cd[3]* Uprev+3*Cd[1]* Uprev#1+1*Cd[2]* Uprev#2+1.41421*Cd[0]* Uprev#3+5*Cd[3]* Uprev#3+3*Cd[4]* Uprev#4+1*Cd[5]* Uprev#5 ) *  Grad(u#1)' *  Grad(v#1)  + 
(1*Cd[4]* Uprev+1*Cd[2]* Uprev#1+1*Cd[1]* Uprev#2+1.41421*Cd[4]* Uprev#3+1*Cd[0]* Uprev#4+1.41421*Cd[3]* Uprev#4+1.41421*Cd[5]* Uprev#4+1.41421*Cd[4]* Uprev#5 ) *  Grad(u#2)' *  Grad(v#1)  + 
(1.41421*Cd[1]* Uprev+1.41421*Cd[0]* Uprev#1+5*Cd[3]* Uprev#1+1.41421*Cd[4]* Uprev#2+5*Cd[1]* Uprev#3+1.41421*Cd[2]* Uprev#4 ) *  Grad(u#3)' *  Grad(v#1)  + 
(1*Cd[2]* Uprev+3*Cd[4]* Uprev#1+1*Cd[0]* Uprev#2+1.41421*Cd[3]* Uprev#2+1.41421*Cd[5]* Uprev#2+1.41421*Cd[2]* Uprev#3+3*Cd[1]* Uprev#4+1.41421*Cd[2]* Uprev#5 ) *  Grad(u#4)' *  Grad(v#1)  + 
(1*Cd[5]* Uprev#1+1.41421*Cd[4]* Uprev#2+1.41421*Cd[2]* Uprev#4+1*Cd[1]* Uprev#5 ) *  Grad(u#5)' *  Grad(v#1)  + 
(1*Cd[2]* Uprev+1*Cd[4]* Uprev#1+1*Cd[0]* Uprev#2+1.41421*Cd[5]* Uprev#2+1*Cd[1]* Uprev#4+1.41421*Cd[2]* Uprev#5 ) *  Grad(u)' *  Grad(v#2)  + 
(1*Cd[4]* Uprev+1*Cd[2]* Uprev#1+1*Cd[1]* Uprev#2+1.41421*Cd[4]* Uprev#3+1*Cd[0]* Uprev#4+1.41421*Cd[3]* Uprev#4+1.41421*Cd[5]* Uprev#4+1.41421*Cd[4]* Uprev#5 ) *  Grad(u#1)' *  Grad(v#2)  + 
(1*Cd[0]* Uprev+1.41421*Cd[5]* Uprev+1*Cd[1]* Uprev#1+3*Cd[2]* Uprev#2+1*Cd[3]* Uprev#3+3*Cd[4]* Uprev#4+1.41421*Cd[0]* Uprev#5+5*Cd[5]* Uprev#5 ) *  Grad(u#2)' *  Grad(v#2)  + 
(1.41421*Cd[4]* Uprev#1+1*Cd[3]* Uprev#2+1*Cd[2]* Uprev#3+1.41421*Cd[1]* Uprev#4 ) *  Grad(u#3)' *  Grad(v#2)  + 
(1*Cd[1]* Uprev+1*Cd[0]* Uprev#1+1.41421*Cd[3]* Uprev#1+1.41421*Cd[5]* Uprev#1+3*Cd[4]* Uprev#2+1.41421*Cd[1]* Uprev#3+3*Cd[2]* Uprev#4+1.41421*Cd[1]* Uprev#5 ) *  Grad(u#4)' *  Grad(v#2)  + 
(1.41421*Cd[2]* Uprev+1.41421*Cd[4]* Uprev#1+1.41421*Cd[0]* Uprev#2+5*Cd[5]* Uprev#2+1.41421*Cd[1]* Uprev#4+5*Cd[2]* Uprev#5 ) *  Grad(u#5)' *  Grad(v#2)  + 
(1*Cd[3]* Uprev+1.41421*Cd[1]* Uprev#1+1*Cd[0]* Uprev#3+2.82843*Cd[3]* Uprev#3+1.41421*Cd[4]* Uprev#4 ) *  Grad(u)' *  Grad(v#3)  + 
(1.41421*Cd[1]* Uprev+1.41421*Cd[0]* Uprev#1+5*Cd[3]* Uprev#1+1.41421*Cd[4]* Uprev#2+5*Cd[1]* Uprev#3+1.41421*Cd[2]* Uprev#4 ) *  Grad(u#1)' *  Grad(v#3)  + 
(1.41421*Cd[4]* Uprev#1+1*Cd[3]* Uprev#2+1*Cd[2]* Uprev#3+1.41421*Cd[1]* Uprev#4 ) *  Grad(u#2)' *  Grad(v#3)  + 
(1*Cd[0]* Uprev+2.82843*Cd[3]* Uprev+5*Cd[1]* Uprev#1+1*Cd[2]* Uprev#2+2.82843*Cd[0]* Uprev#3+15*Cd[3]* Uprev#3+5*Cd[4]* Uprev#4+1*Cd[5]* Uprev#5 ) *  Grad(u#3)' *  Grad(v#3)  + 
(1.41421*Cd[4]* Uprev+1.41421*Cd[2]* Uprev#1+1.41421*Cd[1]* Uprev#2+5*Cd[4]* Uprev#3+1.41421*Cd[0]* Uprev#4+5*Cd[3]* Uprev#4+2*Cd[5]* Uprev#4+2*Cd[4]* Uprev#5 ) *  Grad(u#4)' *  Grad(v#3)  + 
(1*Cd[5]* Uprev#3+2*Cd[4]* Uprev#4+1*Cd[3]* Uprev#5 ) *  Grad(u#5)' *  Grad(v#3)  + 
(1*Cd[4]* Uprev+1*Cd[2]* Uprev#1+1*Cd[1]* Uprev#2+1.41421*Cd[4]* Uprev#3+1*Cd[0]* Uprev#4+1.41421*Cd[3]* Uprev#4+1.41421*Cd[5]* Uprev#4+1.41421*Cd[4]* Uprev#5 ) *  Grad(u)' *  Grad(v#4)  + 
(1*Cd[2]* Uprev+3*Cd[4]* Uprev#1+1*Cd[0]* Uprev#2+1.41421*Cd[3]* Uprev#2+1.41421*Cd[5]* Uprev#2+1.41421*Cd[2]* Uprev#3+3*Cd[1]* Uprev#4+1.41421*Cd[2]* Uprev#5 ) *  Grad(u#1)' *  Grad(v#4)  + 
(1*Cd[1]* Uprev+1*Cd[0]* Uprev#1+1.41421*Cd[3]* Uprev#1+1.41421*Cd[5]* Uprev#1+3*Cd[4]* Uprev#2+1.41421*Cd[1]* Uprev#3+3*Cd[2]* Uprev#4+1.41421*Cd[1]* Uprev#5 ) *  Grad(u#2)' *  Grad(v#4)  + 
(1.41421*Cd[4]* Uprev+1.41421*Cd[2]* Uprev#1+1.41421*Cd[1]* Uprev#2+5*Cd[4]* Uprev#3+1.41421*Cd[0]* Uprev#4+5*Cd[3]* Uprev#4+2*Cd[5]* Uprev#4+2*Cd[4]* Uprev#5 ) *  Grad(u#3)' *  Grad(v#4)  + 
(1*Cd[0]* Uprev+1.41421*Cd[3]* Uprev+1.41421*Cd[5]* Uprev+3*Cd[1]* Uprev#1+3*Cd[2]* Uprev#2+1.41421*Cd[0]* Uprev#3+5*Cd[3]* Uprev#3+2*Cd[5]* Uprev#3+9*Cd[4]* Uprev#4+1.41421*Cd[0]* Uprev#5+2*Cd[3]* Uprev#5+5*Cd[5]* Uprev#5 ) *  Grad(u#4)' *  Grad(v#4)  + 
(1.41421*Cd[4]* Uprev+1.41421*Cd[2]* Uprev#1+1.41421*Cd[1]* Uprev#2+2*Cd[4]* Uprev#3+1.41421*Cd[0]* Uprev#4+2*Cd[3]* Uprev#4+5*Cd[5]* Uprev#4+5*Cd[4]* Uprev#5 ) *  Grad(u#5)' *  Grad(v#4)  + 
(1*Cd[5]* Uprev+1.41421*Cd[2]* Uprev#2+1.41421*Cd[4]* Uprev#4+1*Cd[0]* Uprev#5+2.82843*Cd[5]* Uprev#5 ) *  Grad(u)' *  Grad(v#5)  + 
(1*Cd[5]* Uprev#1+1.41421*Cd[4]* Uprev#2+1.41421*Cd[2]* Uprev#4+1*Cd[1]* Uprev#5 ) *  Grad(u#1)' *  Grad(v#5)  + 
(1.41421*Cd[2]* Uprev+1.41421*Cd[4]* Uprev#1+1.41421*Cd[0]* Uprev#2+5*Cd[5]* Uprev#2+1.41421*Cd[1]* Uprev#4+5*Cd[2]* Uprev#5 ) *  Grad(u#2)' *  Grad(v#5)  + 
(1*Cd[5]* Uprev#3+2*Cd[4]* Uprev#4+1*Cd[3]* Uprev#5 ) *  Grad(u#3)' *  Grad(v#5)  + 
(1.41421*Cd[4]* Uprev+1.41421*Cd[2]* Uprev#1+1.41421*Cd[1]* Uprev#2+2*Cd[4]* Uprev#3+1.41421*Cd[0]* Uprev#4+2*Cd[3]* Uprev#4+5*Cd[5]* Uprev#4+5*Cd[4]* Uprev#5 ) *  Grad(u#4)' *  Grad(v#5)  + 
(1*Cd[0]* Uprev+2.82843*Cd[5]* Uprev+1*Cd[1]* Uprev#1+5*Cd[2]* Uprev#2+1*Cd[3]* Uprev#3+5*Cd[4]* Uprev#4+2.82843*Cd[0]* Uprev#5+15*Cd[5]* Uprev#5 ) *  Grad(u#5)' *  Grad(v#5)  ) //EOM

